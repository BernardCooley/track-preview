generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         String   @id @default(cuid())
  firebaseId String
  autoplay   Boolean  @default(false)
  genre      String   @default("all")
  yearFrom   Int      @default(1960)
  yearTo     Int      @default(dbgenerated("extract(year from now())::int"))
  Review     Review[]
}

model SearchedTrack {
  id          String      @id @default(cuid())
  artist      String
  title       String
  previewUrl  String
  thumbnail   String
  url         String
  releaseYear Int
  User        UserTrack[]
}

model Review {
  id                 String    @id @default(cuid())
  currentReviewStep  Int
  furthestReviewStep Int
  userTrack          UserTrack @relation(fields: [userTrackId], references: [id])
  userTrackId        String
  user               User      @relation(fields: [userId], references: [id])
  userId             String

  @@unique([userId, userTrackId])
}

model UserTrack {
  id              String        @id @default(cuid())
  artist          String
  genre           String
  title           String
  purchaseUrl     String
  searchedTrack   SearchedTrack @relation(fields: [searchedTrackId], references: [id])
  searchedTrackId String
  review          Review[]
}

model StoredTrack {
  id           String @id @default(cuid())
  platform     String
  purchaseUrl  String
  artist       String
  releaseTitle String
  genre        String
  title        String
  releaseDate  String
  releaseYear  Int
  slug         String @unique
}

model Comments {
  id        String   @id @default(cuid())
  name      String
  userId    String
  comment   String
  email     String
  replied   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
